
package wordcounter;

import javax.swing.JOptionPane;

public class counter extends javax.swing.JFrame {

    public counter() {
        initComponents();
    }
 private void countWords() {
        String inputText = jTextArea1.getText();

        // Step 9: Input validation to handle empty inputs
        if (inputText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Error: Input is empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Step 7: Ignore common words or stop words
        String[] words = inputText.split("\\s+"); 
        /* Split by spaces The regular expression \\s+ is used to match one or more whitespace characters in a string. Here's a breakdown of the components:

\\: This is an escape sequence in Java for a single backslash. In regular expressions, a single backslash is used to escape special characters.

s: This is the actual character "s". In the context of regular expressions, it represents the character class for whitespace.

+: This is a quantifier that means "one or more occurrences of the preceding element" (in this case, whitespace characters).

So, \\s+ can be read as "match one or more whitespace characters." In practical terms, it will match sequences of spaces, tabs, or line breaks. This is often used when splitting a string into words based on whitespace.





*/

        // You can add more common words to this array if needed
        String[] stopWords = {"the", "and", "in", "to", "of", "a", "is", "it", "that"};

        // Step 4: Initialize a counter variable to keep track of the number of words
        int wordCount = 0;

        // Step 5: Iterate through the array of words and increment the counter for each word encountered
        for (String word : words) {
            // Step 7: Ignore common words or stop words
            if (!isStopWord(word, stopWords)) {
                wordCount++;
            }
        }

        // Step 6: Display the total count of words to the user
        jLabel2.setText("Total number of words: " + wordCount);

        // Step 8: Provide statistics like the number of unique words
        int uniqueWordCount = getUniqueWordCount(words, stopWords);
        JOptionPane.showMessageDialog(this, "Number of unique words: " + uniqueWordCount,
                "Word Statistics", JOptionPane.INFORMATION_MESSAGE);
    }

    private boolean isStopWord(String word, String[] stopWords) {
        for (String stopWord : stopWords) {
            if (word.equalsIgnoreCase(stopWord)) {
                return true;
            }
        }
        return false;
    }
private int getUniqueWordCount(String[] words, String[] stopWords) {
        // Step 8: Provide statistics like the number of unique words
        int uniqueWordCount = 0;
        for (String word : words) {
            if (!isStopWord(word, stopWords)) {
                uniqueWordCount++;
            }
        }
        return uniqueWordCount;
    }

  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Word_counter");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, 330, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 60));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1090, 460));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 540, 610, -1));

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Count words-");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 530, 250, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      countWords();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(counter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(counter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(counter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(counter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new counter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
